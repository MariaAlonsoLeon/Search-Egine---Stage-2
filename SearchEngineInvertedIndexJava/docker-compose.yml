version: '3.7'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb_container
    ports:
      - "27017:27017"
    networks:
      - app-network

  neo4j:
    image: neo4j:latest
    container_name: neo4j_container
    environment:
      - NEO4J_AUTH=neo4j/unodostres
    ports:
      - "7687:7687"
      - "7474:7474"
    volumes:
      - neo4j-data:/data
    networks:
      - app-network

  crawler:
    build:
      context: ./crawler
      dockerfile: Dockerfile
    container_name: crawler_container
    volumes:
      - type: bind
        source: ./datalake
        target: /app/datalake
    networks:
      - app-network

  indexer:
    build:
      context: ./indexer
      dockerfile: Dockerfile
    container_name: indexer_container
    volumes:
      - type: bind
        source: ./datalake
        target: /app/datalake
      - type: bind
        source: ./datamart
        target: /app/datamart
    environment:
      - DATATYPE=NEO4J
    networks:
      - app-network
    depends_on:
      - neo4j

  query_engine:
    build:
      context: ./query_engine
      dockerfile: Dockerfile
    container_name: query_engine_container
    ports:
      - "8080:8080"
    volumes:
      - type: bind
        source: ./datalake
        target: /app/datalake
      - type: bind
        source: ./datamart
        target: /app/datamart
    networks:
      - app-network

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: ui_container
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://query_engine:8080
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  neo4j-data:
    driver: local
